#
#
# PRE-RUN:
# 	(django) manage.py collectstatic
#
# RUN:
# 	# nginx:
# 	sudo /opt/local/sbin/nginx
#
# 	# django
# 	cd django-backend/doorlockdbackend && \
# 	python3 -m gunicorn doorlockdbackend.wsgi:application -b unix:/tmp/gunicorn.sock
#
#
# STOP:
# 	sudo killall nginx
#
#



#user  nobody;
worker_processes  10;

# run in foreground:
daemon off;

error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

	upstream app_server {
	    # fail_timeout=0 means we always retry an upstream even if it failed
	    # to return a good HTTP response

	    # for UNIX domain socket setups
	    server unix:/tmp/gunicorn.sock fail_timeout=0;

	    # for a TCP configuration
	    # server 192.168.0.7:8000 fail_timeout=0;
	}


    server {
        listen       808;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   share/nginx/html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           share/nginx/html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    include        fastcgi.conf;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
				
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   share/nginx/html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    server {
       listen       443 ssl;
       server_name  localhost;

	   # add certificate file as SERVER_SSL_CERTIFICATE in doorlockdbackend/settings.py 
       ssl_certificate      cert.pem;
       ssl_certificate_key  cert.key;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

	   ssl_verify_client optional_no_ca;
       # location / {
       #     root   share/nginx/html;
       #     index  index.html index.htm;
       # }
	   
       location / {
         # checks for static file, if not found proxy to app
         try_files $uri @proxy_to_app;
       }

       location @proxy_to_app {
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
         proxy_set_header Host $http_host;
		 # proxy_set_header X-SSL-CERT $ssl_client_escaped_cert;
		 proxy_set_header X-SSL-RAW-CERT $ssl_client_raw_cert;
		 # proxy_set_header X-SSL-Figerprint $ssl_client_fingerprint;
		 
         # we don't want nginx trying to do something clever with
         # redirects, we set the Host: header above already.
         proxy_redirect off;
         proxy_pass http://app_server;
       }
	   
	   location /static {
		   root   /Users/diederik/Werkmap/doorlockd-master/django-backend;
	   }
    }

}
