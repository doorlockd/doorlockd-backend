Create: POST	-> 200 ok; 500 db error  					(all have json data)
Read: 	GET 	-> 200 ok; 404 not found, 					(all have json data)
Update:	PUT 	-> 201 ok; 404 not found, 500 db error		(all have json data)
Delete: DELETE	-> 204 ok (no data); 404 not found, 500 db error (error has json data)


################################
#    API JWT authentication    #
################################

#
# /api/login/				[POST] 
#
	post	: {'email': 'xxx', 'password': 'xxx'}
	response: {"status": true,"token": "XXXXXXXXXXXXXXXXX","message": "User logged on."}
	
	error:
	response: {"status": false,"error": "error-type","message": "error description"}

	example: curl -X POST -H "Content-Type: application/json" \
			 http://192.168.7.2:8000/api/login/ -d '{"email": "root","password": "secret"}' 

	
#
# /api/refresh_token/		[POST] 
#

	post	: no payload
	response: {"status": true,"token": "XXXXXXXXXXXXXXXXX","message": "User logged on."}
	
	error:
	response: {"status": false,"error": "error-type","message": "error description"}
	
	example: curl -X POST -H "Authorization: Bearer ${token}" http://192.168.7.2:8000/api/refresh_token/

################################
#    API DB                    #
################################

	/api/tags/:id?				[PUT/POST/GET/DELETE]
	/api/unknowntags/:id?		[PUT/POST/GET/DELETE]
	/api/users/:id?				[PUT/POST/GET/DELETE]
	/api/changelog/:model/:id  	[GET]

	!!! see schema files for more info
	
################################
#    API HW                    #
################################

	/api/hw/solenoid			{ status = false|true }
	/api/hw/buzzer 				{ status = false|true }
	/api/hw/button1				{ status = false|true } (read-only ?)
	/api/hw/button2				{ status = false|true } (read-only ?)
	/api/hw/rfidreader			{ status = false|true } (on/off)
	/api/hw/automated_actions 	{ status=false|true; trigger_actions=['delay1s','solenoid']} 
								# (actions: buzzer|solenoid|delay1s|...)

	!!! see schema files for more info
