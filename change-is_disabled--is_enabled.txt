is_disabled --> is_enabled:

User:

- migrate db
	make migration:							orator make:migration change_user_is_disabled_to_is_enabled.py --table=users
	update data: 							
- update model								
- update json schema
- update code (check for admin perm/login)
- update angular
-----------------------------------
Tag:
- migrate db
	make migration:							orator make:migration change_tags_is_disabled_to_is_enabled.py --table=tags
	update data:
- update model
- update json schema
- update code (check for door_open)
- update angular



-----------------------------------
todo:
[x] fix migrations/
[ ] fix angular: create tag from unknowntags
[ ] fix angular: create user, is_enabled  default true 
[ ] fix angular: 

[ ] fix migration: new idea: rename table -> table_migration_x , create empty table. make version upgrade script.



--------------------------------------------------------------------------------
-- SQLite data migration from is_disabled to is_enabled:
--------------------------------------------------------------------------------

PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "users_v2" (
	"id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, 
	"email" VARCHAR NOT NULL, 
	"password_hash" VARCHAR NOT NULL, 
	"is_enabled" TINYINT NOT NULL, 
	"created_at" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, 
	"updated_at" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL
);
INSERT INTO users_v2 SELECT id,email,password_hash,(NOT is_disabled) as is_enabled,created_at,updated_at FROM users;
DROP TABLE users;
ALTER TABLE users_v2 RENAME TO users;
CREATE UNIQUE INDEX users_email_unique ON "users" ("email");
COMMIT;


PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "tags_v2" ("id" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, "hwid" VARCHAR NOT NULL, "description" VARCHAR NOT NULL, "is_enabled" TINYINT NOT NULL, "created_at" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL, "updated_at" DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL);

INSERT INTO tags_v2 SELECT id, hwid, description, (NOT is_disabled) as is_enabled, created_at, updated_at FROM tags;

DROP TABLE tags;

ALTER TABLE tags_v2 RENAME TO tags;

CREATE UNIQUE INDEX tags_hwid_unique ON "tags" ("hwid");
COMMIT;


-------------------------------------------------------------------------------------


# udpate code
git pull

# update sql db with above SQL
